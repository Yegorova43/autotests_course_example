def multiplication_chain(num):
    
    # создаем счетчик иетраций
    count_multy = 0
    
    # если переданное число сотоит из одного символа, сразу отдаем счетчик = 0
    if len(str(num)) == 1:
        return count_multy
        
    # создаем список из элементов переданного числа
    str_num = str(num)
    str_list = []
    for i in str_num:
        str_list.append(i)
    
    # создаем счетчик произведений элементов, запускаем первую итерацию умножения
    a = 1
    for i in str_list:
        a *= int(i)
    # увеличиваем счетчик итераций на 1    
    count_multy += 1 
    # считаем кол-во символов в получившемся произведении
    len_sum = len(str(a))
    
    # если произведение равно нулю, то итерации закончены, отдаем счетчик = 1
    if a == 0:
            return count_multy
           
    else:
        # в противном случае продолжаем итерации, пока кол-во элиментов в числе не будет = 1
        while len_sum > 1:
            # создаем новый список из последнего произведения элементов
            b = str(a)
            b1 = []
            for i in b:
                b1.append(i)
            
            # обнуляем предыдущий счетчик кол-ва элементов в произведении и присваеваем новое значение    
            len_sum = len(b1) 

            # обновляем счетчик произведения эл-тов, запускаем итерацию
            a = 1
            for i in b1:
                a *= int(i)
            # обнуляем предыдущий счетчик кол-ва элементов в произведении и присваеваем новое значение      
            len_sum = len(str(a))    
            # увеличиваем счетчик итераций на 1
            count_multy += 1
        return count_multy
    
#TODO очень громоздское решение, поидее все можно обернуть в 1 цикл, без действий перед ним            
            
data = [
    39, 4, 25, 999, 5050, 222333444
]

test_data = [
    3, 0, 2, 4, 1, 4
]


for i, d in enumerate(data):
    assert multiplication_chain(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')           
